#pragma checksum "C:\Users\it\Desktop\midterm_6013532\Views\Page\customerView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6a71bc49f87c1e13279e0a325103abe1f73875a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Page_customerView), @"mvc.1.0.view", @"/Views/Page/customerView.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\it\Desktop\midterm_6013532\Views\_ViewImports.cshtml"
using midterm_6013532;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\it\Desktop\midterm_6013532\Views\_ViewImports.cshtml"
using midterm_6013532.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6a71bc49f87c1e13279e0a325103abe1f73875a9", @"/Views/Page/customerView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa4f2a98f464c38781d0ef8aaceb0f9b855c1ffe", @"/Views/_ViewImports.cshtml")]
    public class Views_Page_customerView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div id=""app1"">
    <h3 align=""center"">Customer Information</h3><br>
    <table class=""table table-striped"">
        <thead class=""thead-dark"">
            <tr>
                <th>Customer ID</th>
                <th>Customer Name</th>
                <th>PhoneNumber</th>
                <th>Status</th>
            </tr>
        </thead>
        <tr v-for=""i in customer_list"">
            <td>{{i.customerId}}</td>
            <td>{{i.customerName}}</td>
            <td>{{i.phoneNumber}}</td>
            <td>{{i.statusName}}</td>
        </tr>
    </table>
    <hr><br>
    <h3 align=""center"">Customer Bank Account</h3><br>
    <table class=""table table-striped"">
        <thead class=""thead-dark"">
            <tr>
                <th>Bank Account ID</th>
                <th>Bank Account No</th>
                <th>Balance</th>
                <th>Account Type</th>
            </tr>
        </thead>
        <tr v-for="" x in account_list"">
            <td>{{x.bankAccountId}}</td>
  ");
            WriteLiteral(@"          <td>{{x.bankAccountNo}}</td>
            <td>{{x.balance}}</td>
            <td>{{x.accountType}}</td>
        </tr>
    </table>
    <br><hr>
    <h4 align=""center"">Deposit</h4>
    <div class=""form-group"">
        <label>Target Account No</label>
        <input class=""form-control"" v-model=""deposit_obj.targetAct""/>
        <label>Amount</label>
        <input class=""form-control"" v-model=""deposit_obj.amount""/><br>
            <button class=""btn btn-outline-success"" ");
            WriteLiteral(@"@click=""deposit()"">Deposit</button>

    </div>
    <hr>
    <hr>
    <h4 align=""center"">WithDraw</h4>
    <div class=""form-group"">
        <label>Target Account No</label>
        <input class=""form-control"" v-model=""withdraw_obj.targetAct""/>
        <label>Amount</label>
        <input class=""form-control"" v-model=""withdraw_obj.amount""/><br>
            <button class=""btn btn-outline-warning"" ");
            WriteLiteral(@"@click=""withdraw()"">WithDraw</button>

    </div>
    <hr>
    <hr>
    <h4 align=""center"">Transfer</h4>
    <div class=""form-group"">
        <label>From Account No</label>
        <input class=""form-control"" v-model=""transfer_obj.fromAct""/>
        <label>Target Account No</label>
        <input class=""form-control"" v-model=""transfer_obj.targetAct""/>
        <label>Amount</label>
        <input class=""form-control"" v-model=""transfer_obj.amount""/><br>
            <button class=""btn btn-outline-primary"" ");
            WriteLiteral("@click=\"transfer()\">Transfer</button>\r\n\r\n    </div>\r\n    <hr>\r\n    <hr>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        var component = {
            el: '#app1',
            data: {
                account_list: [],
                customer_list: [],
                deposit_obj: {
                    targetAct: 0,
                    amount: 0,
                },
                withdraw_obj: {
                    targetAct: 0,
                    amount: 0,
                },
                transfer_obj: {
                    fromAct: 0,
                    targetAct: 0,
                    amount: 0,
                },
            },//end of data
            methods: {
                async deposit(){
                    var url = '/api/transaction/DepositCustomer/';
                    var result = await axios.post(url , this.deposit_obj);
                    console.log(result.data);
                    await alert(result.data.code + "" : "" + result.data.message + "" : "" 
                    + result.data.data);
                    location.reload();
                },//en");
                WriteLiteral(@"d of deposit
                async withdraw(){
                    var url = '/api/transaction/WithDrawCustomer/';
                    var result = await axios.post(url , this.withdraw_obj);
                    console.log(result.data);
                    await alert(result.data.code + "" : "" + result.data.message + "" : "" 
                    + result.data.data);
                    location.reload();
                },//end of withdraw
                async transfer(){
                    var url = '/api/transaction/TransferCustomer/';
                    var result = await axios.post(url , this.transfer_obj);
                    console.log(result.data);
                    await alert(result.data.code + "" : "" + result.data.message + "" : "" 
                    + result.data.data);
                    location.reload();
                },//end of transfer

            },//end methods
            created(){
                this.customer_list = ");
#nullable restore
#line 124 "C:\Users\it\Desktop\midterm_6013532\Views\Page\customerView.cshtml"
                                Write(Html.Raw(Json.Serialize(@ViewBag.customer_list)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n                this.account_list = ");
#nullable restore
#line 125 "C:\Users\it\Desktop\midterm_6013532\Views\Page\customerView.cshtml"
                               Write(Html.Raw(Json.Serialize(@ViewBag.account_list)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n                console.log(this.customer_list);\r\n                console.log(this.account_list);\r\n            },//end of created\r\n        };\r\n        var vueJs = new Vue(component);\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
